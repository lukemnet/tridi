{"version":3,"sources":["webpack://Tridi/webpack/universalModuleDefinition","webpack://Tridi/./src/tridi.ts","webpack://Tridi/webpack/bootstrap","webpack://Tridi/webpack/startup"],"names":["root","factory","exports","module","define","amd","self","options","trigger","eventName","ev","validate","element","console","error","images","format","location","this","undefined","count","Array","isArray","length","draggable","keys","hintOnStartup","hintText","focusOnHintClose","lazy","autoplay","autoplaySpeed","stopAutoplayOnClick","stopAutoplayOnMouseenter","resumeAutoplayOnMouseleave","resumeAutoplayDelay","passive","spinner","touch","mousewheel","inverse","dragInterval","touchDragInterval","mouseleaveDetect","onViewerGenerate","onViewerImageGenerate","onViewerImageUpdate","onHintShow","onHintHide","onLoadingScreenShow","onLoadingScreenHide","onImagesPreload","onAutoplayStart","onAutoplayStop","onNextMove","onPrevMove","onNextFrame","onPrevFrame","onDragStart","onDragEnd","onLoad","onUpdate","elementName","setElementName","imageIndex","moveBuffer","dragActive","intervals","timeouts","stashedImgs","el","substr","getAttribute","split","Math","floor","random","validateUpdate","updateOptions","Object","forEach","key","constructor","getElem","cssClass","document","querySelector","viewer","stash","getHintOverlay","getLoadingScreen","image","whichImage","imgs","viewerImage","lazyLoad","callback","skip","addEventListener","apply","map","index","toLowerCase","generateViewer","className","generateLoadingScreen","loadingScreen","createElement","style","display","loadingSpinner","appendChild","setLoadingState","enable","noEvent","generateStash","classList","add","destroyStash","parentNode","removeChild","displayHintOnStartup","hintOverlay","tabIndex","hint","innerHTML","e","isItHintOverlay","target","contains","isItHint","focus","stashImage","imageSrc","img","Image","onload","bind","src","outerHTML","populateStash","generateViewerImage","setAttribute","updateViewerImage","nextFrame","prevFrame","nextMove","prevMove","rotateViewerImage","interval","touches","clientX","coord","offsetLeft","push","tmp","threshold","oldMove","newMove","startDragging","stopDragging","remove","resetMoveBuffer","attachCosmeticEvents","attachDragEvents","preventDefault","attachMouseLeaveDetection","attachTouchEvents","attachMousewheelEvents","deltaY","attachKeyEvents","clearIntervals","clearInterval","setAutoplayInterval","autoplayInterval","window","setInterval","clearTimeouts","clearTimeout","setAutoplayTimeout","autoplayTimeout","setTimeout","toggleAutoplay","state","skipDelay","stopAutoplaySequence","startAutoplay","handleAutoplayToggle","attachEvents","start","next","prev","autoplayStart","autoplayStop","update","syncFrame","load","Tridi","create","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__"],"mappings":"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","file":"tridi.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Tridi\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Tridi\"] = factory();\n\telse\n\t\troot[\"Tridi\"] = factory();\n})(self, function() {\nreturn ","/*\n  Tridi v1.2.1 - JavaScript 360 3D Product Viewer\n  Author: Lukasz Wojcik\n  License: MIT\n  Homepage: https://tridi.lukem.net\n  GitHub: http://github.com/lukemnet/tridi\n*/\n\ntype ImageArray = ReadonlyArray<string>;\ntype NumberedImages = 'numbered';\n\nexport interface TridiOptions {\n  [key: string]: any;\n  element: string | HTMLElement;\n  images?: ImageArray | NumberedImages;\n  format?: string;\n  count?: number;\n  location?: string;\n  hintOnStartup?: boolean;\n  lazy?: boolean;\n  hintText?: string | null;\n  focusOnHintClose?: boolean;\n  draggable?: boolean;\n  keys?: boolean;\n  autoplay?: boolean;\n  autoplaySpeed?: number;\n  stopAutoplayOnClick?: boolean;\n  stopAutoplayOnMouseenter?: boolean;\n  resumeAutoplayOnMouseleave?: boolean;\n  resumeAutoplayDelay?: number;\n  passive?: boolean;\n  spinner?: boolean;\n  mousewheel?: boolean;\n  dragInterval?: number;\n  touchDragInterval?: number;\n  mouseleaveDetect?: boolean;\n  touch?: boolean;\n  inverse?: boolean;\n  playable?: boolean;\n  onViewerGenerate?: Function | undefined;\n  onViewerImageGenerate?: Function | undefined;\n  onViewerImageUpdate?: Function | undefined;\n  onHintShow?: Function | undefined;\n  onHintHide?: Function | undefined;\n  onLoadingScreenShow: Function | undefined;\n  onLoadingScreenHide: Function | undefined;\n  onImagesPreload?: Function | undefined;\n  onAutoplayStart?: Function | undefined;\n  onAutoplayStop?: Function | undefined;\n  onNextMove?: Function | undefined;\n  onPrevMove?: Function | undefined;\n  onNextFrame?: Function | undefined;\n  onPrevFrame?: Function | undefined;\n  onDragStart?: Function | undefined;\n  onDragEnd?: Function | undefined;\n  onUpdate?: Function | undefined;\n  onLoad?: Function | undefined;\n}\n\ninterface TridiUpdatableOptions {\n  [key: string]: any;\n  images?: ImageArray | NumberedImages;\n  format?: string;\n  count?: number;\n  location?: string;\n}\n\nexport class Tridi {\n  [key: string]: any;\n\n  element: string | HTMLElement;\n\n  images?: ImageArray | NumberedImages;\n\n  format?: string;\n\n  location?: string;\n\n  count?: number;\n\n  draggable?: boolean;\n\n  keys?: boolean;\n\n  hintOnStartup?: boolean;\n\n  hintText?: string | null;\n\n  focusOnHintClose?: boolean;\n\n  lazy?: boolean;\n\n  autoplay?: boolean;\n\n  autoplaySpeed?: number;\n\n  stopAutoplayOnClick?: boolean;\n\n  stopAutoplayOnMouseenter?: boolean;\n\n  resumeAutoplayOnMouseleave?: boolean;\n\n  resumeAutoplayDelay: number;\n\n  spinner?: boolean;\n\n  dragInterval?: number;\n\n  touchDragInterval?: number;\n\n  mouseleaveDetect?: boolean;\n\n  touch?: boolean;\n\n  mousewheel?: boolean;\n\n  inverse?: boolean;\n\n  onViewerGenerate?: Function | undefined;\n\n  onViewerImageGenerate?: Function | undefined;\n\n  onViewerImageUpdate?: Function | undefined;\n\n  onHintShow?: Function | undefined;\n\n  onHintHide?: Function | undefined;\n\n  onLoadingScreenShow: Function | undefined;\n\n  onLoadingScreenHide: Function | undefined;\n\n  onImagesPreload?: Function | undefined;\n\n  onAutoplayStart?: Function | undefined;\n\n  onAutoplayStop?: Function | undefined;\n\n  onNextMove?: Function | undefined;\n\n  onPrevMove?: Function | undefined;\n\n  onNextFrame?: Function | undefined;\n\n  onPrevFrame?: Function | undefined;\n\n  onDragStart?: Function | undefined;\n\n  onDrag?: Function | undefined;\n\n  onDragEnd?: Function | undefined;\n\n  onUpdate?: Function | undefined;\n\n  onLoad?: Function | undefined;\n\n  private elementName: string;\n\n  private stashedImgs: number;\n\n  private imageIndex: number;\n\n  private moveBuffer: number[];\n\n  private dragActive: boolean;\n\n  private intervals: number[];\n\n  private timeouts: number[];\n\n  constructor(options: TridiOptions) {\n    this.validate(options);\n\n    this.element = options.element;\n    this.images = options.images || 'numbered';\n    this.format = options.format || undefined;\n    this.location = options.location || './images';\n    this.count = Array.isArray(this.images)\n      ? this.images.length\n      : options.count;\n    this.draggable = typeof options.draggable !== 'undefined'\n      ? options.draggable : true;\n    this.keys = options.keys || false;\n    this.hintOnStartup = options.hintOnStartup || false;\n    this.hintText = options.hintText || null;\n    this.focusOnHintClose = options.focusOnHintClose || false;\n    this.lazy = options.lazy || false;\n    this.autoplay = options.autoplay || false;\n    this.autoplaySpeed = typeof options.autoplaySpeed !== 'undefined'\n      ? options.autoplaySpeed : 50;\n    this.stopAutoplayOnClick = options.stopAutoplayOnClick || false;\n    this.stopAutoplayOnMouseenter = options.stopAutoplayOnMouseenter || false;\n    this.resumeAutoplayOnMouseleave = options.resumeAutoplayOnMouseleave || false;\n    this.resumeAutoplayDelay = options.resumeAutoplayDelay || 0;\n    this.passive = typeof options.passive !== 'undefined'\n      ? options.passive : true;\n    this.spinner = options.spinner || false;\n    this.touch = typeof options.touch !== 'undefined' ? options.touch : true;\n    this.mousewheel = options.mousewheel || false;\n    this.inverse = options.inverse || false;\n    this.dragInterval = options.dragInterval || 1;\n    this.touchDragInterval = options.touchDragInterval || 2;\n    this.mouseleaveDetect = options.mouseleaveDetect || false;\n    this.onViewerGenerate = options.onViewerGenerate || undefined;\n    this.onViewerImageGenerate = options.onViewerImageGenerate || undefined;\n    this.onViewerImageUpdate = options.onViewerImageUpdate || undefined;\n    this.onHintShow = options.onHintShow || undefined;\n    this.onHintHide = options.onHintHide || undefined;\n    this.onLoadingScreenShow = options.onLoadingScreenShow || undefined;\n    this.onLoadingScreenHide = options.onLoadingScreenHide || undefined;\n    this.onImagesPreload = options.onImagesPreload || undefined;\n    this.onAutoplayStart = options.onAutoplayStart || undefined;\n    this.onAutoplayStop = options.onAutoplayStop || undefined;\n    this.onNextMove = options.onNextMove || undefined;\n    this.onPrevMove = options.onPrevMove || undefined;\n    this.onNextFrame = options.onNextFrame || undefined;\n    this.onPrevFrame = options.onPrevFrame || undefined;\n    this.onDragStart = options.onDragStart || undefined;\n    this.onDragEnd = options.onDragEnd || undefined;\n    this.onLoad = options.onLoad || undefined;\n    this.onUpdate = options.onUpdate || undefined;\n    this.elementName = this.setElementName();\n    this.imageIndex = 1;\n    this.moveBuffer = [];\n    this.dragActive = false;\n    this.intervals = [];\n    this.timeouts = [];\n    this.stashedImgs = 0;\n  }\n\n  private setElementName() {\n    const el = this.element;\n\n    if (typeof el === 'string') return el.substr(1);\n    if (el.getAttribute('id')) return el.getAttribute('id')!;\n    if (el.getAttribute('class')) return el.getAttribute('class')!.split(' ')[0];\n\n    return `unnamedTridi-${Math.floor(Math.random() * 90000) + 10000}`;\n  }\n\n  private trigger = (eventName:string) => {\n    const ev = this[eventName];\n    if (ev) ev();\n  };\n\n  private validate = (options: TridiOptions) => {\n    if (!options.element) {\n      console.error(\n        '\\'element\\' property is missing or invalid. Container element must be specified.',\n      );\n    }\n\n    if (\n      typeof options.images === 'undefined'\n      && typeof options.format === 'undefined'\n    ) {\n      console.error(\n        '\\'format\\' property is missing or invalid. Image format must be provided for \\'numbered\\' property.',\n      );\n    }\n\n    if (options.images === 'numbered' && !options.location) {\n      console.error(\n        '\\'location\\' property is missing or invalid. Image location must be provided for \\'numbered\\' property.',\n      );\n    }\n  };\n\n  // eslint-disable-next-line class-methods-use-this\n  private validateUpdate(options: TridiUpdatableOptions) {\n    if (\n      !options.images\n      && !options.format\n      && !options.count\n      && !options.location\n    ) {\n      console.error(\n        'UpdatableOptions object doesn\\'t contain options that can be updated.',\n      );\n      return false;\n    }\n    return true;\n  }\n\n  private updateOptions(options: TridiOptions | TridiUpdatableOptions) {\n    Object.keys(options).forEach((key) => {\n      this[key] = options[key];\n      if (key === 'images' && options[key]!.constructor === Array) this.count = options.images!.length;\n    });\n  }\n\n  private getElem(cssClass?: string) {\n    if (typeof this.element === 'string') {\n      return cssClass\n        ? <HTMLElement>(\n          document.querySelector(\n            `${this.element} ${cssClass}`,\n          )\n        )!\n        : <HTMLElement>document.querySelector(this.element)!;\n    }\n    return this.element;\n  }\n\n  private viewer() {\n    return this.getElem();\n  }\n\n  private stash() {\n    return this.getElem('.tridi-stash');\n  }\n\n  private getHintOverlay() {\n    return this.getElem('.tridi-hint-overlay');\n  }\n\n  private getLoadingScreen() {\n    return this.getElem('.tridi-loading');\n  }\n\n  private image(whichImage: number) {\n    return this.imgs()![whichImage - 1];\n  }\n\n  private viewerImage() {\n    return <HTMLImageElement> this.getElem('.tridi-viewer-image');\n  }\n\n  private lazyLoad(callback: Function, skip?: Boolean) {\n    if (this.lazy && !skip) {\n      this.viewerImage().addEventListener('click', callback as EventListener);\n      if (this.touch) {\n        this.viewerImage().addEventListener(\n          'touchstart',\n          callback as EventListener,\n          { passive: this.passive },\n        );\n      }\n    } else {\n      callback();\n    }\n  }\n\n  private imgs() {\n    if (this.images === 'numbered') {\n      return <ReadonlyArray<string>>(\n        // eslint-disable-next-line prefer-spread\n        Array.apply(null, { length: this.count }).map(\n          // eslint-disable-next-line no-empty-pattern\n          ({}, index: number) =>\n            `${this.location}/${index + 1}.${this.format!.toLowerCase()}`,\n        )\n      );\n    }\n    return this.images as ReadonlyArray<string>;\n  }\n\n  private generateViewer() {\n    this.viewer().className\n      += ' tridi-viewer'\n      + ` tridi-${this.elementName}-viewer`\n      + ` tridi-draggable-${this.draggable}`\n      + ` tridi-touch-${this.touch}`\n      + ` tridi-mousewheel-${this.mousewheel}`\n      + ` tridi-hintOnStartup-${this.hintOnStartup}`\n      + ` tridi-lazy-${this.lazy}`;\n    this.trigger('onViewerGenerate');\n  }\n\n  private generateLoadingScreen() {\n    const loadingScreen = document.createElement('div');\n    loadingScreen.className += `tridi-loading tridi-${\n      this.elementName\n    }-loading`;\n    loadingScreen.style.display = 'none';\n\n    const loadingSpinner = document.createElement('div');\n    loadingSpinner.className += `tridi-spinner tridi-${\n      this.elementName\n    }-spinner`;\n    loadingScreen.appendChild(loadingSpinner);\n    this.viewer().appendChild(loadingScreen);\n  }\n\n  private setLoadingState(enable: boolean, noEvent?: boolean) {\n    this.getLoadingScreen().style.display = enable ? 'block' : 'none';\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    (!noEvent) && this.trigger(enable ? 'onLoadingScreenShow' : 'onLoadingScreenHide');\n  }\n\n  private generateStash() {\n    if (!this.stash()) {\n      this.stashedImgs = 0;\n\n      const stash = document.createElement('div');\n      stash.style.display = 'none';\n      stash.classList.add('tridi-stash');\n      this.viewer().appendChild(stash);\n    }\n  }\n\n  private destroyStash() {\n    this.stashedImgs = 0;\n    this.stash().parentNode!.removeChild(this.stash());\n  }\n\n  private displayHintOnStartup(callback: Function) {\n    if (this.hintOnStartup) {\n      const hintOverlayClassName = `tridi-${this.elementName}-hint-overlay`;\n      const hintOverlay = document.createElement('div');\n      hintOverlay.className += `tridi-hint-overlay ${hintOverlayClassName}`;\n      hintOverlay.tabIndex = 0;\n\n      const hintClassName = `tridi-${this.elementName}-hint`;\n      const hint = document.createElement('div');\n      hint.className += `tridi-hint ${hintClassName}`;\n\n      if (this.hintText) {\n        hint.innerHTML = `<span class=\"tridi-hint-text tridi-${\n          this.elementName\n        }-hint-text\">${this.hintText}</span>`;\n      }\n\n      hintOverlay.appendChild(hint);\n\n      this.viewer().appendChild(hintOverlay);\n\n      this.trigger('onHintShow');\n\n      const hintClickHandler = (e: Event) => {\n        const isItHintOverlay = (e.target as HTMLElement).classList.contains(\n          hintOverlayClassName,\n        );\n        const isItHint = (e.target as HTMLElement).classList.contains(\n          hintClassName,\n        );\n\n        if (isItHintOverlay || isItHint) {\n          this.getHintOverlay().style.display = 'none';\n          callback();\n          /* istanbul ignore next */\n          if (this.focusOnHintClose) this.viewerImage().focus();\n          this.trigger('onHintHide');\n        }\n      };\n\n      document.addEventListener('click', hintClickHandler);\n      if (this.touch) document.addEventListener('touchstart', hintClickHandler);\n\n      document.addEventListener('keydown', (e) => {\n        /* istanbul ignore next */\n        if (e.key === 'Enter') hintClickHandler(e);\n      });\n    } else {\n      callback();\n    }\n  }\n\n  private stashImage(\n    stash: HTMLElement,\n    imageSrc: string,\n    index: number,\n    callback: Function,\n  ) {\n    const img = new Image();\n    img.onload = callback.bind(this);\n    img.className += `tridi-image tridi-image-${index + 1}`;\n    img.src = imageSrc;\n    // eslint-disable-next-line no-param-reassign\n    stash.innerHTML += img.outerHTML;\n  }\n\n  private populateStash() {\n    const stash = this.stash();\n    const images = this.imgs();\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    (stash && images) && images.forEach((image, index) => {\n      /* istanbul ignore next */\n      this.stashImage(stash, image, index, () => {\n        this.stashedImgs += 1;\n        if (this.stashedImgs === images.length) {\n          this.setLoadingState(false, true);\n          this.trigger('onImagesPreload');\n        }\n      });\n    });\n  }\n\n  private generateViewerImage() {\n    const viewer = this.viewer();\n    const viewerImage = new Image();\n    /* istanbul ignore next */\n    viewerImage.onload = () => this.trigger('onViewerImageGenerate');\n    viewerImage.className += `tridi-viewer-image tridi-${\n      this.elementName\n    }-viewer-image`;\n    viewerImage.setAttribute('draggable', 'false');\n    viewerImage.setAttribute('alt', '');\n    viewerImage.src = this.image(1);\n    viewer.innerHTML = `${viewerImage.outerHTML}${viewer.innerHTML}`;\n  }\n\n  private updateViewerImage(whichImage: number) {\n    /* istanbul ignore next */\n    this.viewerImage().onload = () => this.trigger('onViewerImageUpdate');\n    this.viewerImage().src = this.image(whichImage);\n  }\n\n  private nextFrame() {\n    this.imageIndex = this.imageIndex <= 1 ? this.count! : this.imageIndex - 1;\n    this.viewerImage().src = this.image(this.imageIndex);\n    this.trigger('onNextFrame');\n  }\n\n  private prevFrame() {\n    this.imageIndex = this.imageIndex >= this.count! ? 1 : this.imageIndex + 1;\n    this.viewerImage().src = this.image(this.imageIndex);\n    this.trigger('onPrevFrame');\n  }\n\n  private nextMove() {\n    this.trigger('onNextMove');\n    return this.inverse ? this.prevFrame() : this.nextFrame();\n  }\n\n  private prevMove() {\n    this.trigger('onPrevMove');\n    return this.inverse ? this.nextFrame() : this.prevFrame();\n  }\n\n  private rotateViewerImage(e: MouseEvent | TouchEvent) {\n    const touch = (e as TouchEvent).touches;\n    const interval = (touch ? this.touchDragInterval : this.dragInterval)!;\n\n    const clientX = (e as TouchEvent).touches\n      ? (e as TouchEvent).touches[0].clientX\n      : (e as MouseEvent).clientX;\n\n    const eventX = Math.floor(clientX);\n    const coord = eventX - this.viewerImage().offsetLeft;\n\n    if (this.moveBuffer.length < 2) {\n      this.moveBuffer.push(coord);\n    } else {\n      const tmp = this.moveBuffer[1];\n      this.moveBuffer[1] = coord;\n      this.moveBuffer[0] = tmp;\n    }\n\n    const threshold = coord % interval === 0;\n    const oldMove = this.moveBuffer[0];\n    const newMove = this.moveBuffer[1];\n\n    if (threshold && newMove < oldMove) {\n      this.nextMove();\n    } else if (threshold && newMove > oldMove) {\n      this.prevMove();\n    }\n  }\n\n  private startDragging() {\n    this.dragActive = true;\n    this.viewer().classList.add('tridi-dragging');\n    this.trigger('onDragStart');\n  }\n\n  private stopDragging() {\n    this.dragActive = false;\n    this.viewer().classList.remove('tridi-dragging');\n    this.trigger('onDragEnd');\n  }\n\n  private resetMoveBuffer() {\n    this.moveBuffer = [];\n  }\n\n  private attachCosmeticEvents() {\n    const viewer = this.viewer();\n\n    viewer.addEventListener('mouseenter', () =>\n      viewer.classList.add('tridi-viewer-hovered'));\n    viewer.addEventListener('mouseleave', () =>\n      viewer.classList.remove('tridi-viewer-hovered'));\n  }\n\n  private attachDragEvents() {\n    if (this.draggable) {\n      const viewerImage = this.viewerImage();\n\n      viewerImage.addEventListener('mousedown', (e) => {\n        /* istanbul ignore next */\n        if (e.preventDefault) e.preventDefault();\n        this.startDragging();\n        this.rotateViewerImage(e);\n      });\n\n      viewerImage.addEventListener('mouseup', (e) => {\n        /* istanbul ignore next */\n        if (e.preventDefault) e.preventDefault();\n        this.stopDragging();\n        this.resetMoveBuffer();\n      });\n\n      viewerImage.addEventListener('mousemove', (e) => {\n        if (this.dragActive) this.rotateViewerImage(e);\n      });\n\n      viewerImage.addEventListener('mouseleave', () => {\n        this.resetMoveBuffer();\n      });\n    }\n  }\n\n  private attachMouseLeaveDetection() {\n    if (this.mouseleaveDetect) {\n      this.viewer().addEventListener('mouseleave', () => {\n        this.stopDragging();\n        this.resetMoveBuffer();\n      });\n    }\n  }\n\n  private attachTouchEvents() {\n    if (this.touch) {\n      const viewerImage = this.viewerImage();\n\n      viewerImage.addEventListener(\n        'touchstart',\n        (e) => {\n          this.startDragging();\n          this.rotateViewerImage(e);\n        },\n        { passive: true },\n      );\n\n      viewerImage.addEventListener(\n        'touchmove',\n        (e) => {\n          this.rotateViewerImage(e);\n        },\n        { passive: true },\n      );\n\n      viewerImage.addEventListener('touchend', () => {\n        this.stopDragging();\n        this.resetMoveBuffer();\n      });\n    }\n  }\n\n  private attachMousewheelEvents() {\n    if (this.mousewheel) {\n      this.viewerImage().addEventListener(\n        'wheel',\n        (e) => {\n          if (e.preventDefault && !this.passive) e.preventDefault();\n          // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n          (e.deltaY / 120 > 0) ? this.nextMove() : this.prevMove();\n        },\n        { passive: this.passive },\n      );\n    }\n  }\n\n  private attachKeyEvents() {\n    if (this.keys) {\n      this.viewerImage().setAttribute('tabindex', '0');\n      this.viewerImage().addEventListener('keydown', (e) => {\n        if (e.key === 'ArrowLeft') this.prevMove();\n        if (e.key === 'ArrowRight') this.nextMove();\n      });\n    }\n  }\n\n  private clearIntervals() {\n    this.intervals.map(clearInterval);\n    this.intervals.length = 0;\n  }\n\n  private setAutoplayInterval() {\n    const autoplayInterval = window.setInterval(\n      this.nextMove.bind(this),\n      this.autoplaySpeed,\n    );\n    this.intervals.push(autoplayInterval);\n  }\n\n  private clearTimeouts() {\n    this.timeouts.map(clearTimeout);\n    this.timeouts.length = 0;\n  }\n\n  private setAutoplayTimeout() {\n    const autoplayTimeout = window.setTimeout(\n      this.setAutoplayInterval.bind(this),\n      this.resumeAutoplayDelay,\n    );\n    this.timeouts.push(autoplayTimeout);\n  }\n\n  private toggleAutoplay(state: boolean, skipDelay?: boolean) {\n    if (state) {\n      this.clearTimeouts();\n\n      if (this.intervals.length === 0) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        skipDelay ? this.setAutoplayInterval() : this.setAutoplayTimeout();\n      }\n    } else {\n      this.clearIntervals();\n    }\n    this.trigger(state ? 'onAutoplayStart' : 'onAutoplayStop');\n  }\n\n  private stopAutoplaySequence() {\n    this.clearTimeouts();\n    this.toggleAutoplay(false);\n  }\n\n  private startAutoplay() {\n    if (this.autoplay) {\n      this.toggleAutoplay(true, true);\n\n      if (this.stopAutoplayOnClick) {\n        this.viewerImage().addEventListener(\n          'mousedown',\n          this.stopAutoplaySequence.bind(this),\n        );\n        if (this.touch) {\n          this.viewerImage().addEventListener(\n            'touchstart',\n            this.stopAutoplaySequence.bind(this),\n            { passive: this.passive },\n          );\n        }\n      }\n\n      if (this.stopAutoplayOnMouseenter) {\n        this.viewerImage().addEventListener(\n          'mouseenter',\n          this.stopAutoplaySequence.bind(this),\n        );\n      }\n\n      const handleAutoplayToggle = (e: Event) => {\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        (!(e.target as HTMLElement).classList.contains('tridi-btn')) && this.toggleAutoplay(true);\n      };\n\n      if (this.resumeAutoplayOnMouseleave) {\n        const viewerImage = this.viewerImage();\n\n        viewerImage.addEventListener('mouseleave', handleAutoplayToggle);\n\n        if (this.touch) viewerImage.addEventListener('touchend', handleAutoplayToggle);\n      }\n    }\n  }\n\n  private attachEvents() {\n    this.attachCosmeticEvents();\n    this.attachDragEvents();\n    this.attachMouseLeaveDetection();\n    this.attachTouchEvents();\n    this.attachMousewheelEvents();\n    this.attachKeyEvents();\n  }\n\n  private start() {\n    this.generateViewer();\n    this.generateLoadingScreen();\n    this.setLoadingState(true);\n    this.generateViewerImage();\n    this.setLoadingState(false);\n    this.displayHintOnStartup(() => {\n      this.lazyLoad(() => {\n        this.setLoadingState(true);\n        this.generateStash();\n        this.populateStash();\n        this.attachEvents();\n        this.startAutoplay();\n        this.setLoadingState(false);\n      });\n    });\n    this.trigger('onLoad');\n  }\n\n  next() {\n    this.nextMove();\n  }\n\n  prev() {\n    this.prevMove();\n  }\n\n  autoplayStart() {\n    this.toggleAutoplay(true);\n  }\n\n  autoplayStop() {\n    this.toggleAutoplay(false);\n  }\n\n  update(options: TridiUpdatableOptions, syncFrame?: boolean) {\n    if (this.validateUpdate(options)) {\n      this.setLoadingState(true);\n      this.updateOptions(options);\n      this.destroyStash();\n      this.generateStash();\n      this.populateStash();\n      this.updateViewerImage(syncFrame ? this.imageIndex : 1);\n      this.attachEvents();\n      this.setLoadingState(false);\n      this.trigger('onUpdate');\n    }\n  }\n\n  load() {\n    this.start();\n  }\n}\n\nexport const create = (options: TridiOptions) => new Tridi(options);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(646);\n"],"sourceRoot":""}