{"version":3,"sources":["webpack://Tridi/webpack/universalModuleDefinition","webpack://Tridi/./src/tridi.ts","webpack://Tridi/webpack/bootstrap","webpack://Tridi/webpack/startup"],"names":["root","factory","exports","module","define","amd","self","options","trigger","eventName","ev","validate","element","console","error","images","format","location","this","undefined","count","Array","isArray","length","draggable","keys","hintOnStartup","hintText","focusOnHintClose","lazy","autoplay","autoplaySpeed","stopAutoplayOnClick","stopAutoplayOnMouseenter","resumeAutoplayOnMouseleave","resumeAutoplayDelay","passive","spinner","touch","mousewheel","inverse","dragInterval","touchDragInterval","mouseleaveDetect","onViewerGenerate","onViewerImageGenerate","onViewerImageUpdate","onHintShow","onHintHide","onLoadingScreenShow","onLoadingScreenHide","onImagesPreload","onAutoplayStart","onAutoplayStop","onNextMove","onPrevMove","onNextFrame","onPrevFrame","onDragStart","onDragEnd","onLoad","onUpdate","elementName","setElementName","imageIndex","moveBuffer","dragActive","intervals","timeouts","stashedImgs","el","substr","getAttribute","split","Math","floor","random","validateUpdate","updateOptions","Object","map","key","constructor","getElem","cssClass","document","querySelector","viewer","stash","getHintOverlay","getLoadingScreen","image","whichImage","imgs","viewerImage","lazyLoad","callback","skip","addEventListener","apply","index","toLowerCase","generateViewer","className","generateLoadingScreen","loadingScreen","createElement","style","display","loadingSpinner","appendChild","setLoadingState","enable","noEvent","generateStash","classList","add","destroyStash","parentNode","removeChild","displayHintOnStartup","hintOverlay","tabIndex","hint","innerHTML","e","isItHintOverlay","target","contains","isItHint","focus","stashImage","imageSrc","img","Image","onload","bind","src","outerHTML","populateStash","generateViewerImage","setAttribute","updateViewerImage","nextFrame","prevFrame","nextMove","prevMove","rotateViewerImage","interval","touches","clientX","coord","offsetLeft","push","tmp","threshold","oldMove","newMove","startDragging","stopDragging","remove","resetMoveBuffer","attachCosmeticEvents","attachDragEvents","preventDefault","attachMouseLeaveDetection","attachTouchEvents","attachMousewheelEvents","deltaY","attachKeyEvents","clearIntervals","clearInterval","setAutoplayInterval","autoplayInterval","window","setInterval","clearTimeouts","clearTimeout","setAutoplayTimeout","autoplayTimeout","setTimeout","toggleAutoplay","state","skipDelay","stopAutoplaySequence","startAutoplay","handleAutoplayToggle","attachEvents","start","next","prev","autoplayStart","autoplayStop","update","syncFrame","load","create","Tridi","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__"],"mappings":"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","file":"tridi.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Tridi\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Tridi\"] = factory();\n\telse\n\t\troot[\"Tridi\"] = factory();\n})(self, function() {\nreturn ","/*\n  Tridi v1.2.1 - JavaScript 360 3D Product Viewer\n  Author: Lukasz Wojcik\n  License: MIT\n  Homepage: https://tridi.lukem.net\n  GitHub: http://github.com/lukemnet/tridi\n*/\n\ntype ImageArray = ReadonlyArray<string>;\ntype NumberedImages = \"numbered\";\nexport interface TridiOptions {\n  [key: string]: any;\n  element: string | HTMLElement;\n  images?: ImageArray | NumberedImages;\n  format?: string;\n  count?: number;\n  location?: string;\n  hintOnStartup?: boolean;\n  lazy?: boolean;\n  hintText?: string | null;\n  focusOnHintClose?: boolean;\n  draggable?: boolean;\n  keys?: boolean;\n  autoplay?: boolean;\n  autoplaySpeed?: number;\n  stopAutoplayOnClick?: boolean;\n  stopAutoplayOnMouseenter?: boolean;\n  resumeAutoplayOnMouseleave?: boolean;\n  resumeAutoplayDelay?: number;\n  passive?: boolean;\n  spinner?: boolean;\n  mousewheel?: boolean;\n  dragInterval?: number;\n  touchDragInterval?: number;\n  mouseleaveDetect?: boolean;\n  touch?: boolean;\n  inverse?: boolean;\n  playable?: boolean;\n  onViewerGenerate?: Function | undefined;\n  onViewerImageGenerate?: Function | undefined;\n  onViewerImageUpdate?: Function | undefined;\n  onHintShow?: Function | undefined;\n  onHintHide?: Function | undefined; \n  onLoadingScreenShow: Function | undefined;\n  onLoadingScreenHide: Function | undefined;\n  onImagesPreload?: Function | undefined;\n  onAutoplayStart?: Function | undefined;\n  onAutoplayStop?: Function | undefined;\n  onNextMove?: Function | undefined;\n  onPrevMove?: Function | undefined;\n  onNextFrame?: Function | undefined;\n  onPrevFrame?: Function | undefined;\n  onDragStart?: Function | undefined;\n  onDragEnd?: Function | undefined;\n  onUpdate?: Function | undefined;\n  onLoad?: Function | undefined;\n}\n\ninterface TridiUpdatableOptions {\n  [key: string]: any;\n  images?: ImageArray | NumberedImages;\n  format?: string;\n  count?: number;\n  location?: string;\n}\n\nclass Tridi {\n  [key: string]: any;\n  element: string | HTMLElement;\n  images?: ImageArray | NumberedImages;\n  format?: string;\n  location?: string;\n  count?: number;\n  draggable?: boolean;\n  keys?: boolean;\n  hintOnStartup?: boolean;\n  hintText?: string | null;\n  focusOnHintClose?: boolean;\n  lazy?: boolean;\n  autoplay?: boolean;\n  autoplaySpeed?: number;\n  stopAutoplayOnClick?: boolean;\n  stopAutoplayOnMouseenter?: boolean;\n  resumeAutoplayOnMouseleave?: boolean;\n  resumeAutoplayDelay: number;\n  spinner?: boolean;\n  dragInterval?: number;\n  touchDragInterval?: number;\n  mouseleaveDetect?: boolean;\n  touch?: boolean;\n  mousewheel?: boolean;\n  inverse?: boolean;\n  onViewerGenerate?: Function | undefined;\n  onViewerImageGenerate?: Function | undefined;\n  onViewerImageUpdate?: Function | undefined;\n  onHintShow?: Function | undefined;\n  onHintHide?: Function | undefined;\n  onLoadingScreenShow: Function | undefined;\n  onLoadingScreenHide: Function | undefined;\n  onImagesPreload?: Function | undefined;\n  onAutoplayStart?: Function | undefined;\n  onAutoplayStop?: Function | undefined;\n  onNextMove?: Function | undefined;\n  onPrevMove?: Function | undefined;\n  onNextFrame?: Function | undefined;\n  onPrevFrame?: Function | undefined;\n  onDragStart?: Function | undefined;\n  onDrag?: Function | undefined;\n  onDragEnd?: Function | undefined;\n  onUpdate?: Function | undefined;\n  onLoad?: Function | undefined;\n  private elementName: string;\n  private stashedImgs: number;\n  private imageIndex: number;\n  private moveBuffer: number[];\n  private dragActive: boolean;\n  private intervals: number[];\n  private timeouts: number[];\n\n  constructor(options: TridiOptions) {\n    this.validate(options);\n\n    this.element = options.element;\n    this.images = options.images || \"numbered\";\n    this.format = options.format || undefined;\n    this.location = options.location || \"./images\";\n    this.count = Array.isArray(this.images)\n      ? this.images.length\n      : options.count;\n    this.draggable =\n      typeof options.draggable !== \"undefined\" ? options.draggable : true;\n    this.keys = options.keys || false;\n    this.hintOnStartup = options.hintOnStartup || false;\n    this.hintText = options.hintText || null;\n    this.focusOnHintClose = options.focusOnHintClose || false;\n    this.lazy = options.lazy || false;\n    this.autoplay = options.autoplay || false;\n    this.autoplaySpeed =\n      typeof options.autoplaySpeed !== \"undefined\" ? options.autoplaySpeed : 50;\n    this.stopAutoplayOnClick = options.stopAutoplayOnClick || false;\n    this.stopAutoplayOnMouseenter = options.stopAutoplayOnMouseenter || false;\n    this.resumeAutoplayOnMouseleave =\n      options.resumeAutoplayOnMouseleave || false;\n    this.resumeAutoplayDelay = options.resumeAutoplayDelay || 0;\n    this.passive =\n      typeof options.passive !== \"undefined\" ? options.passive : true;\n    this.spinner = options.spinner || false;\n    this.touch = typeof options.touch !== \"undefined\" ? options.touch : true;\n    this.mousewheel = options.mousewheel || false;\n    this.inverse = options.inverse || false;\n    this.dragInterval = options.dragInterval || 1;\n    this.touchDragInterval = options.touchDragInterval || 2;\n    this.mouseleaveDetect = options.mouseleaveDetect || false;\n    this.onViewerGenerate = options.onViewerGenerate || undefined;\n    this.onViewerImageGenerate = options.onViewerImageGenerate || undefined;\n    this.onViewerImageUpdate = options.onViewerImageUpdate || undefined;\n    this.onHintShow = options.onHintShow || undefined;\n    this.onHintHide = options.onHintHide || undefined;\n    this.onLoadingScreenShow = options.onLoadingScreenShow || undefined;\n    this.onLoadingScreenHide = options.onLoadingScreenHide || undefined;\n    this.onImagesPreload = options.onImagesPreload || undefined;\n    this.onAutoplayStart = options.onAutoplayStart || undefined;\n    this.onAutoplayStop = options.onAutoplayStop || undefined;\n    this.onNextMove = options.onNextMove || undefined;\n    this.onPrevMove = options.onPrevMove || undefined;\n    this.onNextFrame = options.onNextFrame || undefined;\n    this.onPrevFrame = options.onPrevFrame || undefined;\n    this.onDragStart = options.onDragStart || undefined;\n    this.onDragEnd = options.onDragEnd || undefined;\n    this.onLoad = options.onLoad || undefined;\n    this.onUpdate = options.onUpdate || undefined;\n    this.elementName = this.setElementName();\n    this.imageIndex = 1;\n    this.moveBuffer = [];\n    this.dragActive = false;\n    this.intervals = [];\n    this.timeouts = [];\n    this.stashedImgs = 0;\n  }\n\n  private setElementName() {\n    const el = this.element;\n  \n    if (typeof el === \"string\") return el.substr(1);\n    if (el.getAttribute(\"id\")) return el.getAttribute(\"id\")!;\n    if (el.getAttribute(\"class\")) return el.getAttribute(\"class\")!.split(\" \")[0];\n\n    return `unnamedTridi-${Math.floor(Math.random()*90000) + 10000}`;\n  }\n\n  private trigger = (eventName:string) => {\n     const ev = this[eventName];\n     if (ev) ev();\n  }\n\n  private validate = (options: TridiOptions) => {\n    if (!options.element) {\n      console.error(\n        `'element' property is missing or invalid. Container element must be specified.`\n      );\n    }\n\n    if (\n      typeof options.images === \"undefined\" &&\n      typeof options.format === \"undefined\"\n    ) {\n      console.error(\n        `'format' property is missing or invalid. Image format must be provided for 'numbered' property.`\n      );\n    }\n\n    if (options.images === \"numbered\" && !options.location) {\n      console.error(\n        `'location' property is missing or invalid. Image location must be provided for 'numbered' property.`\n      );\n    }\n  };\n\n  private validateUpdate(options: TridiUpdatableOptions) {\n    if (\n      !options.images &&\n      !options.format &&\n      !options.count &&\n      !options.location\n    ) {\n      console.error(\n        `UpdatableOptions object doesn't contain options that can be updated.`\n      );\n      return false;\n    }\n    return true;\n  }\n\n  private updateOptions(options: TridiOptions | TridiUpdatableOptions) {\n    Object.keys(options).map(key => {\n      this[key] = options[key];\n      if (key === 'images' && options[key]!.constructor === Array) this.count = options.images!.length;\n    });\n  }\n\n  private getElem(cssClass?: string) {\n    if (typeof this.element === \"string\") {\n      return cssClass\n        ? <HTMLElement>(\n            document.querySelector(\n              `${this.element} ${cssClass}`\n            )\n          )!\n        : <HTMLElement>document.querySelector(this.element)!;\n    }\n    return this.element;\n  }\n\n  private viewer() {\n    return this.getElem();\n  }\n\n  private stash() {\n    return this.getElem(\".tridi-stash\");\n  }\n\n  private getHintOverlay() {\n    return this.getElem(\".tridi-hint-overlay\");\n  }\n\n  private getLoadingScreen() {\n    return this.getElem(\".tridi-loading\");\n  }\n\n  private image(whichImage: number) {\n    return this.imgs()![whichImage - 1];\n  }\n\n  private viewerImage() {\n    return <HTMLImageElement>this.getElem(\".tridi-viewer-image\");\n  }\n\n  private lazyLoad(callback: Function, skip?: Boolean) {\n    if (this.lazy && !skip) {\n      this.viewerImage().addEventListener(\"click\", callback as EventListener);\n      if (this.touch) {\n        this.viewerImage().addEventListener(\n          \"touchstart\",\n          callback as EventListener,\n          { passive: this.passive }\n        );\n      }\n    } else {\n      callback();\n    }\n  }\n\n  private imgs() {\n    if (this.images === \"numbered\") {\n      return <ReadonlyArray<string>>(\n        Array.apply(null, { length: this.count }).map(\n          ({}, index: number) =>\n            `${this.location}/${index + 1}.${this.format!.toLowerCase()}`\n        )\n      );\n    }\n    return this.images as ReadonlyArray<string>;\n  }\n\n  private generateViewer() {\n    this.viewer().className +=\n      \" tridi-viewer\" +\n      ` tridi-${this.elementName}-viewer` +\n      ` tridi-draggable-${this.draggable}` +\n      ` tridi-touch-${this.touch}` +\n      ` tridi-mousewheel-${this.mousewheel}` +\n      ` tridi-hintOnStartup-${this.hintOnStartup}` +\n      ` tridi-lazy-${this.lazy}`;\n    this.trigger('onViewerGenerate');\n  }\n\n  private generateLoadingScreen() {\n    const loadingScreen = document.createElement(\"div\");\n    loadingScreen.className += `tridi-loading tridi-${\n      this.elementName\n    }-loading`;\n    loadingScreen.style.display = \"none\";\n\n    const loadingSpinner = document.createElement(\"div\");\n    loadingSpinner.className += `tridi-spinner tridi-${\n      this.elementName\n    }-spinner`;\n    loadingScreen.appendChild(loadingSpinner);\n    this.viewer().appendChild(loadingScreen);\n  }\n\n  private setLoadingState(enable: boolean, noEvent?: boolean) {\n    this.getLoadingScreen().style.display = enable ? \"block\" : \"none\";\n\n    (!noEvent) && this.trigger(enable ? 'onLoadingScreenShow' : 'onLoadingScreenHide');\n  }\n\n  private generateStash() {\n    if (!this.stash()) {\n      this.stashedImgs = 0;\n\n      const stash = document.createElement(\"div\");\n      stash.style.display = \"none\";\n      stash.classList.add(\"tridi-stash\");\n      this.viewer().appendChild(stash);\n    }\n  }\n\n  private destroyStash() {\n    this.stashedImgs = 0;\n    this.stash().parentNode!.removeChild(this.stash());\n  }\n\n  private displayHintOnStartup(callback: Function) {\n    if (this.hintOnStartup) {\n      const hintOverlayClassName = `tridi-${this.elementName}-hint-overlay`;\n      const hintOverlay = document.createElement(\"div\");\n      hintOverlay.className += `tridi-hint-overlay ${hintOverlayClassName}`;\n      hintOverlay.tabIndex = 0;\n\n      const hintClassName = `tridi-${this.elementName}-hint`;\n      const hint = document.createElement(\"div\");\n      hint.className += `tridi-hint ${hintClassName}`;\n\n      if (this.hintText) {\n        hint.innerHTML = `<span class=\"tridi-hint-text tridi-${\n          this.elementName\n        }-hint-text\">${this.hintText}</span>`;\n      }\n\n      hintOverlay.appendChild(hint);\n\n      this.viewer().appendChild(hintOverlay);\n\n      this.trigger('onHintShow');\n\n      const hintClickHandler = (e: Event) => {\n        const isItHintOverlay = (e.target as HTMLElement).classList.contains(\n          hintOverlayClassName\n        );\n        const isItHint = (e.target as HTMLElement).classList.contains(\n          hintClassName\n        );\n\n        if (isItHintOverlay || isItHint) {\n          this.getHintOverlay().style.display = \"none\";\n          callback();\n          /* istanbul ignore next */\n          if (this.focusOnHintClose) this.viewerImage().focus();\n          this.trigger('onHintHide');\n        }\n      };\n\n      document.addEventListener(\"click\", hintClickHandler);\n      if (this.touch) document.addEventListener(\"touchstart\", hintClickHandler);\n\n      document.addEventListener(\"keydown\", e => {\n        /* istanbul ignore next */\n        if (e.key === \"Enter\") hintClickHandler(e);\n      });\n    } else {\n      callback();\n    }\n  }\n\n  private stashImage(\n    stash: HTMLElement,\n    imageSrc: string,\n    index: number,\n    callback: Function\n  ) {\n    const img = new Image();\n    img.onload = callback.bind(this);\n    img.className += `tridi-image tridi-image-${index + 1}`;\n    img.src = imageSrc;\n    stash.innerHTML += img.outerHTML;\n  }\n\n  private populateStash() {\n    const stash = this.stash();\n    const images = this.imgs();\n\n    (stash && images) && images.map((image, index) => {\n      /* istanbul ignore next */\n      this.stashImage(stash, image, index, () => {\n        this.stashedImgs += 1;\n        if (this.stashedImgs === images.length) {\n          this.setLoadingState(false, true);\n          this.trigger('onImagesPreload');\n        }\n      });\n    });\n  }\n\n  private generateViewerImage() {\n    const viewer = this.viewer();\n    const viewerImage = new Image();\n    /* istanbul ignore next */\n    viewerImage.onload = () => this.trigger('onViewerImageGenerate');\n    viewerImage.className += `tridi-viewer-image tridi-${\n      this.elementName\n    }-viewer-image`;\n    viewerImage.setAttribute(\"draggable\", \"false\");\n    viewerImage.setAttribute(\"alt\", \"\");\n    viewerImage.src = this.image(1);\n    viewer.innerHTML = `${viewerImage.outerHTML}${viewer.innerHTML}`;\n  }\n\n  private updateViewerImage(whichImage: number) {\n    /* istanbul ignore next */\n    this.viewerImage().onload = () => this.trigger('onViewerImageUpdate');\n    this.viewerImage().src = this.image(whichImage);\n  }\n\n  private nextFrame() {\n    this.imageIndex = this.imageIndex <= 1 ? this.count! : this.imageIndex - 1;\n    this.viewerImage().src = this.image(this.imageIndex);\n    this.trigger('onNextFrame');\n  }\n\n  private prevFrame() {\n    this.imageIndex = this.imageIndex >= this.count! ? 1 : this.imageIndex + 1;\n    this.viewerImage().src = this.image(this.imageIndex);\n    this.trigger('onPrevFrame');\n  }\n\n  private nextMove() {\n    this.trigger('onNextMove');\n    return this.inverse ? this.prevFrame() : this.nextFrame();\n  }\n\n  private prevMove() {\n    this.trigger('onPrevMove');\n    return this.inverse ? this.nextFrame() : this.prevFrame();\n  }\n\n  private rotateViewerImage(e: MouseEvent | TouchEvent) {\n    const touch = (e as TouchEvent).touches;\n    const interval = (touch ? this.touchDragInterval : this.dragInterval)!;\n\n    const clientX = (e as TouchEvent).touches\n      ? (e as TouchEvent).touches[0].clientX\n      : (e as MouseEvent).clientX;\n\n    const eventX = Math.floor(clientX);\n    const coord = eventX - this.viewerImage().offsetLeft;\n\n    if (this.moveBuffer.length < 2) {\n      this.moveBuffer.push(coord);\n    } else {\n      const tmp = this.moveBuffer[1];\n      this.moveBuffer[1] = coord;\n      this.moveBuffer[0] = tmp;\n    }\n\n    const threshold = coord % interval === 0;\n    const oldMove = this.moveBuffer[0];\n    const newMove = this.moveBuffer[1];\n\n    if (threshold && newMove < oldMove) {\n      this.nextMove();\n    } else if (threshold && newMove > oldMove) {\n      this.prevMove();\n    }\n  }\n\n  private startDragging() {\n    this.dragActive = true;\n    this.viewer().classList.add(\"tridi-dragging\");\n    this.trigger('onDragStart');\n  }\n\n  private stopDragging() {\n    this.dragActive = false;\n    this.viewer().classList.remove(\"tridi-dragging\");\n    this.trigger('onDragEnd');\n  }\n\n  private resetMoveBuffer() {\n    this.moveBuffer = [];\n  }\n\n  private attachCosmeticEvents() {\n    const viewer = this.viewer();\n\n    viewer.addEventListener(\"mouseenter\", () =>\n      viewer.classList.add(\"tridi-viewer-hovered\")\n    );\n    viewer.addEventListener(\"mouseleave\", () =>\n      viewer.classList.remove(\"tridi-viewer-hovered\")\n    );\n  }\n\n  private attachDragEvents() {\n    if (this.draggable) {\n      const viewerImage = this.viewerImage();\n\n      viewerImage.addEventListener(\"mousedown\", e => {\n        /* istanbul ignore next */\n        if (e.preventDefault) e.preventDefault();\n        this.startDragging();\n        this.rotateViewerImage(e);\n      });\n\n      viewerImage.addEventListener(\"mouseup\", e => {\n        /* istanbul ignore next */\n        if (e.preventDefault) e.preventDefault();\n        this.stopDragging();\n        this.resetMoveBuffer();\n      });\n\n      viewerImage.addEventListener(\"mousemove\", e => {\n        if (this.dragActive) this.rotateViewerImage(e);\n      });\n\n      viewerImage.addEventListener(\"mouseleave\", () => {\n        this.resetMoveBuffer();\n      });\n    }\n  }\n\n  private attachMouseLeaveDetection() {\n    if (this.mouseleaveDetect) {\n      this.viewer().addEventListener(\"mouseleave\", () => {\n        this.stopDragging();\n        this.resetMoveBuffer();\n      });\n    }\n  }\n\n  private attachTouchEvents() {\n    if (this.touch) {\n      const viewerImage = this.viewerImage();\n\n      viewerImage.addEventListener(\n        \"touchstart\",\n        e => {\n          this.startDragging();\n          this.rotateViewerImage(e);\n        },\n        { passive: true }\n      );\n\n      viewerImage.addEventListener(\n        \"touchmove\",\n        e => {\n          this.rotateViewerImage(e);\n        },\n        { passive: true }\n      );\n\n      viewerImage.addEventListener(\"touchend\", () => {\n        this.stopDragging();\n        this.resetMoveBuffer();\n      });\n    }\n  }\n\n  private attachMousewheelEvents() {\n    if (this.mousewheel) {\n      this.viewerImage().addEventListener(\n        \"wheel\",\n        e => {\n          if (e.preventDefault && !this.passive) e.preventDefault();\n          e.deltaY / 120 > 0 ? this.nextMove() : this.prevMove();\n        },\n        { passive: this.passive }\n      );\n    }\n  }\n\n  private attachKeyEvents() {\n    if (this.keys) {\n      this.viewerImage().setAttribute(\"tabindex\", \"0\");\n      this.viewerImage().addEventListener(\"keydown\", e => {\n        if (e.key === \"ArrowLeft\") this.prevMove();\n        if (e.key === \"ArrowRight\") this.nextMove();\n      });\n    }\n  }\n\n  private clearIntervals() {\n    this.intervals.map(clearInterval);\n    this.intervals.length = 0;\n  }\n\n  private setAutoplayInterval() {\n    const autoplayInterval = window.setInterval(\n      this.nextMove.bind(this),\n      this.autoplaySpeed\n    );\n    this.intervals.push(autoplayInterval);\n  }\n\n  private clearTimeouts() {\n    this.timeouts.map(clearTimeout);\n    this.timeouts.length = 0;\n  }\n\n  private setAutoplayTimeout() {\n    const autoplayTimeout = window.setTimeout(\n      this.setAutoplayInterval.bind(this),\n      this.resumeAutoplayDelay\n    );\n    this.timeouts.push(autoplayTimeout);\n  }\n\n  private toggleAutoplay(state: boolean, skipDelay?: boolean) {\n    if (state) {\n      this.clearTimeouts();\n\n      if (this.intervals.length === 0) {\n        skipDelay ? this.setAutoplayInterval() : this.setAutoplayTimeout();\n      }\n    } else {\n      this.clearIntervals();\n    }\n    this.trigger(state ? 'onAutoplayStart' : 'onAutoplayStop');\n  }\n\n  private stopAutoplaySequence() {\n    this.clearTimeouts();\n    this.toggleAutoplay(false);\n  }\n\n  private startAutoplay() {\n    if (this.autoplay) {\n      this.toggleAutoplay(true, true);\n\n      if (this.stopAutoplayOnClick) {\n        this.viewerImage().addEventListener(\n          \"mousedown\",\n          this.stopAutoplaySequence.bind(this)\n        );\n        if (this.touch) {\n          this.viewerImage().addEventListener(\n            \"touchstart\",\n            this.stopAutoplaySequence.bind(this),\n            { passive: this.passive }\n          );\n        }\n      }\n\n      if (this.stopAutoplayOnMouseenter) {\n        this.viewerImage().addEventListener(\n          \"mouseenter\",\n          this.stopAutoplaySequence.bind(this)\n        );\n      }\n\n      const handleAutoplayToggle = (e: Event) => {\n        (!(e.target as HTMLElement).classList.contains(\"tridi-btn\")) && this.toggleAutoplay(true);\n      }\n\n      if (this.resumeAutoplayOnMouseleave) {\n        const viewerImage = this.viewerImage();\n\n        viewerImage.addEventListener(\"mouseleave\", handleAutoplayToggle);\n\n        if (this.touch) viewerImage.addEventListener(\"touchend\", handleAutoplayToggle);\n      }\n    }\n  }\n\n  private attachEvents() {\n    this.attachCosmeticEvents();\n    this.attachDragEvents();\n    this.attachMouseLeaveDetection();\n    this.attachTouchEvents();\n    this.attachMousewheelEvents();\n    this.attachKeyEvents();\n  }\n\n  private start() {\n    this.generateViewer();\n    this.generateLoadingScreen();\n    this.setLoadingState(true);\n    this.generateViewerImage();\n    this.setLoadingState(false);\n    this.displayHintOnStartup(() => {\n      this.lazyLoad(() => {\n        this.setLoadingState(true);\n        this.generateStash();\n        this.populateStash();\n        this.attachEvents();\n        this.startAutoplay();\n        this.setLoadingState(false);\n      });\n    });\n    this.trigger('onLoad');\n  }\n\n  next() {\n    this.nextMove();\n  }\n\n  prev() {\n    this.prevMove();\n  }\n\n  autoplayStart() {\n    this.toggleAutoplay(true);\n  }\n\n  autoplayStop() {\n    this.toggleAutoplay(false);\n  }\n\n  update(options: TridiUpdatableOptions, syncFrame?: boolean) {\n    if (this.validateUpdate(options)) {\n      this.setLoadingState(true);\n      this.updateOptions(options);\n      this.destroyStash();\n      this.generateStash();\n      this.populateStash();\n      this.updateViewerImage(syncFrame ? this.imageIndex : 1);\n      this.attachEvents();\n      this.setLoadingState(false);\n      this.trigger('onUpdate');\n    }\n  }\n\n  load() {\n    this.start();\n  }\n}\n\nexport const create = (options: TridiOptions) => new Tridi(options);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(646);\n"],"sourceRoot":""}